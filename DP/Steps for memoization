1. Declare Base case
2. Epress all states in for loop.
3. Copy the recurence and write.


Note : If we are going from 0 to n-1 in memoization, then in tabulation we will go opposite (n-1 to 0). It's a thumb rule.


// step 1 : In memoization, how much dp array used. Initialize same for tabulation also.
// step 2 : look at the base case. whatever is done in recursion, do same here also.
//           e.g. in rec : if(index == 0 ) return 0 -> so, here we will do dp[0] = 0
// step 3 : See in recursion, for what value of index, recursion will be executed.
//          Run a for loop for all those values.
// step 4 : wherever recursive call is there, replace that recursive call with dp array value.
//          e.g int oneJump = solve(index-1, heights, dp) + abs(heights[index-1] - heights[index]);
//              int oneJump = dp[i-1] + abs(heights[i-1] - heights[i]);
//               Here recurive call solve(index-1) has been replaced by dp[i-1]
// step 5 : At last, return dp[n-1]



